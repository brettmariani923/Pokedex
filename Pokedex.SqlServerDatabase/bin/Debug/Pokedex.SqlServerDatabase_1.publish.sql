/*
Deployment script for Pokedex

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Pokedex"
:setvar DefaultFilePrefix "Pokedex"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating Table [dbo].[PokemonTypes]...';


GO
CREATE TABLE [dbo].[PokemonTypes] (
    [ID]        INT IDENTITY (1, 1) NOT NULL,
    [PokemonID] INT NOT NULL,
    [TypeID]    INT NOT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating Table [dbo].[Types]...';


GO
CREATE TABLE [dbo].[Types] (
    [Id]   INT          NOT NULL,
    [Name] VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    UNIQUE NONCLUSTERED ([Name] ASC)
);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[PokemonTypes]...';


GO
ALTER TABLE [dbo].[PokemonTypes] WITH NOCHECK
    ADD FOREIGN KEY ([PokemonID]) REFERENCES [dbo].[Pokemon] ([PokemonID]);


GO
PRINT N'Creating Foreign Key unnamed constraint on [dbo].[PokemonTypes]...';


GO
ALTER TABLE [dbo].[PokemonTypes] WITH NOCHECK
    ADD FOREIGN KEY ([TypeID]) REFERENCES [dbo].[Types] ([Id]);


GO

  CREATE PROCEDURE [dbo].[SeedTable_Types] AS
BEGIN

    PRINT 'Populating records in [dbo].[Types]';

    IF OBJECT_ID('tempdb.dbo.#dbo_SeedTypes') IS NOT NULL DROP TABLE #dbo_SeedTypes;

    SELECT 
        [Id], [Name] 
    INTO #dbo_SeedTypes 
    FROM [dbo].[Types] 
    WHERE 0 = 1;

    INSERT INTO #dbo_SeedTypes 
        ( [Id], [Name] )
    SELECT 
          [Id], [Name] 
    FROM 
    (  VALUES
            (0, 'Fire')
          , (1, 'Water')
          , (2, 'Flying')
          , (3, 'Fighting')
          , (4, 'Steel')
          , (5, 'Ground')
          , (6, 'Psychic')
          , (7, 'Rock')
          , (8, 'Grass')
          , (9, 'Electric')
          , (10, 'Ice')
          , (11, 'Bug')
          , (12, 'Poison')
          , (13, 'Ghost')
          , (14, 'Dark')
          , (15, 'Dragon')
          , (16, 'Fairy')
          , (17, 'Normal')
    ) AS v ( [Id], [Name] );

    WITH cte_data as 
        (SELECT 
            [Id], [Name] 
        FROM #dbo_SeedTypes)
    MERGE [dbo].[Types] as t
        USING cte_data as s ON t.[Id] = s.[Id]
        WHEN NOT MATCHED BY TARGET THEN
            INSERT 
                ([Id], [Name])
            VALUES 
                (s.[Id], s.[Name])
        WHEN MATCHED 
            THEN UPDATE SET 
                [Name] = s.[Name]
    ;

    DROP TABLE #dbo_SeedTypes;

    PRINT 'Finished Populating records in [dbo].[Types]'
END
GO

EXEC [dbo].[SeedTable_Types];

DROP PROCEDURE IF EXISTS [dbo].[SeedTable_Types] 
GO

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.PokemonTypes'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
